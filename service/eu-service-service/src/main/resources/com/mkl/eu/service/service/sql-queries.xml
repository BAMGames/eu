<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
    <entry key="income.NationalProvinces">
        <![CDATA[
			SELECT
				p.NAME AS PROVINCE,
				peu.INCOME AS INCOME
			FROM r_province_eu peu
				INNER JOIN r_province p ON peu.id = p.id
			WHERE R_COUNTRY = ':countryName'
				AND  p.name NOT IN
					(SELECT
						s.R_PROVINCE
					FROM counter c
						INNER JOIN stack s ON c.ID_STACK = s.id
					WHERE c.R_COUNTRY <> ':countryName'
						AND s.ID_GAME = :idGame
						AND c.TYPE = 'OWN'
					)
			;
		]]>
    </entry>
    <entry key="income.OwnedProvinces">
        <![CDATA[
			SELECT
				s.R_PROVINCE as PROVINCE,
				peu.income as INCOME
			FROM counter c
				INNER JOIN stack s ON c.ID_STACK = s.id
				INNER JOIN r_province p ON p.name = s.r_province
				INNER JOIN r_province_eu peu ON peu.id = p.id
			WHERE c.R_COUNTRY = ':countryName'
				AND s.ID_GAME = :idGame
				AND c.type = 'OWN'
			;
		]]>
    </entry>
    <entry key="income.PillagedProvinces">
        <![CDATA[
			SELECT
				s.R_PROVINCE AS PROVINCE
			FROM counter c
				INNER JOIN stack s ON c.ID_STACK = s.id
			WHERE (c.TYPE = 'REVOLT_MINUS'
					OR c.TYPE = 'REVOLT_PLUS'
					OR c.TYPE = 'PILLAGE_MINUS'
					OR c.TYPE = 'PILLAGE_PLUS'
					OR c.TYPE = 'SIEGEWORK_MINUS'
					OR c.TYPE = 'CONTROL')
				AND s.ID_GAME = :idGame
				AND s.R_PROVINCE in :provinceNames
			;
		]]>
    </entry>
	<entry key="income.mnu">
		<![CDATA[
			SELECT
				SUM(m.value)
			FROM counter c
				INNER JOIN stack s ON c.ID_STACK = s.ID
				INNER JOIN t_mnu m ON m.R_COUNTRY = c.R_COUNTRY AND m.TYPE = c.TYPE
			WHERE s.ID_GAME = :idGame
				AND c.R_COUNTRY = ':countryName'
				AND s.R_PROVINCE NOT IN :provinceNames
			;
		]]>
	</entry>
	<entry key="income.innergold">
		<![CDATA[
			SELECT
				SUM(g.value)
			FROM r_gold g
			WHERE g.R_PROVINCE IN :provinceNames;
		]]>
	</entry>
	<entry key="income.outergold">
		<![CDATA[
			SELECT
				20 * COUNT(*)
			FROM counter c
				INNER JOIN stack s ON c.ID_STACK = s.ID
			WHERE s.ID_GAME = :idGame
				AND s.R_PROVINCE IN :provinceNames
				AND c.TYPE = 'GOLD_MINE'
			;
		]]>
	</entry>
	<entry key="income.tflevels">
		<![CDATA[
			SELECT
				SUM(tf.level * (CASE tz.TYPE WHEN 'ZP' THEN 2 ELSE 1 END))
			FROM trade_fleet tf
				INNER JOIN r_province p ON tf.R_PROVINCE = p.NAME
				INNER JOIN R_PROVINCE_TZ tz ON tz.ID = p.ID
			WHERE tf.R_COUNTRY = ':countryName'
				AND tf.ID_GAME = :idGame
		;
		]]>
	</entry>
	<entry key="income.tfmonop">
		<![CDATA[
			SELECT
				SUM(
					CASE
        				WHEN tf.LEVEL = 6 THEN tz.MONOPOLY
        				WHEN tf.LEVEL >= 4 THEN tz.MONOPOLY / 2
        				WHEN tf.LEVEL >= 1 THEN tz.PRESENCE
        				ELSE 0
        			END
        		)
			FROM trade_fleet tf
				INNER JOIN r_province p ON tf.R_PROVINCE = p.NAME
				INNER JOIN R_PROVINCE_TZ tz ON tz.ID = p.ID
			WHERE tf.R_COUNTRY = ':countryName'
				AND tf.ID_GAME = :idGame
		;
		]]>
	</entry>
	<entry key="counter.tradeCenter">
		<![CDATA[
			SELECT
				c.TYPE as TYPE,
				COALESCE(GROUP_CONCAT(cp.R_COUNTRY SEPARATOR ','), peu.R_COUNTRY) as COUNTRY
			FROM counter c
				INNER JOIN stack s ON c.ID_STACK = s.ID
				INNER JOIN r_province p ON s.R_PROVINCE = p.NAME
				INNER JOIN r_province_eu peu ON p.ID = peu.ID
  				LEFT OUTER JOIN STACK sp ON sp.R_PROVINCE = p.NAME AND sp.ID_GAME = :idGame
  				LEFT OUTER JOIN COUNTER cp ON cp.ID_STACK = sp.ID AND cp.TYPE = 'OWN'
			WHERE c.TYPE LIKE 'TRADE_CENTER%'
				AND s.ID_GAME = :idGame
			GROUP BY c.TYPE, peu.R_COUNTRY
		;
		]]>
	</entry>
	<entry key="income.colTp">
		<![CDATA[
			SELECT
				e.TYPE as TYPE,
				SUM(
					CASE e.TYPE
						WHEN 'COLONY' THEN LEVEL + (CASE WHEN LEVEL >=4 THEN 2 WHEN LEVEL >= 1 THEN 1 ELSE 0 END) * r.INCOME
						ELSE CASE WHEN LEVEL >= 4 THEN 2 WHEN LEVEL >=1 THEN 1 ELSE 0 END
					END) AS INCOME
			FROM establishment e
				INNER JOIN r_region r ON e.R_REGION = r.NAME
				INNER JOIN counter c0 ON e.ID_COUNTER = c0.ID
				INNER JOIN stack s ON c0.ID_STACK = s.id
			WHERE c0.R_COUNTRY = ':countryName'
				AND s.ID_GAME = :idGame
			GROUP BY e.TYPE
		;
		]]>
	</entry>
	<entry key="income.exoRes">
		<![CDATA[
			SELECT
				SUM(price)
			FROM (
  				SELECT
  					SUM(er.NUMBER) * CAST(SUBSTRING(s.R_PROVINCE, 6, 1) AS INT) AS PRICE
  				FROM exotic_resources er
  					INNER JOIN establishment e ON er.ID_ESTABLISHMENT = e.ID
  					INNER JOIN counter c0 ON e.ID_COUNTER = c0.ID
  					INNER JOIN counter c1 ON c1.type = concat(er.RESOURCE, '_PRICE')
  					INNER JOIN stack s ON c1.ID_STACK = s.ID
  				WHERE c0.R_COUNTRY = ':countryName'
  					AND s.ID_GAME = :idGame
  				GROUP BY er.RESOURCE, s.R_PROVINCE
			) as t
		;
		]]>
	</entry>
	<entry key="game.ownedProvinces">
		<![CDATA[
			SELECT
				p.NAME AS PROVINCE
			FROM r_province_eu peu
				INNER JOIN r_province p ON peu.id = p.id
			WHERE R_COUNTRY = ':countryName'
				AND  p.name NOT IN
					(SELECT
						s.R_PROVINCE
					FROM counter c
						INNER JOIN stack s ON c.ID_STACK = s.id
					WHERE c.R_COUNTRY <> ':countryName'
						AND s.ID_GAME = :idGame
						AND (c.TYPE = 'OWN')
					)
			UNION
			SELECT
				s.R_PROVINCE AS PROVINCE
			FROM counter c
				INNER JOIN stack s ON c.ID_STACK = s.id
				INNER JOIN r_province p ON p.name = s.r_province
				INNER JOIN r_province_eu peu ON peu.id = p.id
			WHERE c.R_COUNTRY = ':countryName'
				AND s.ID_GAME = :idGame
				AND c.type = 'OWN'
			;
		]]>
	</entry>
	<entry key="game.fatherlandInDanger">
		<![CDATA[
			SELECT
  				DISTINCT p.NAME AS PROVINCE
			FROM r_province_eu peu
  				INNER JOIN r_province p ON peu.id = p.id
  				INNER JOIN stack s on s.R_PROVINCE = p.NAME AND s.ID_GAME = :idGame
  				INNER JOIN counter c on c.ID_STACK = s.ID
			WHERE peu.R_COUNTRY = ':countryName'
  				AND c.R_COUNTRY in :enemies
      			AND  p.name NOT IN (
           			SELECT
              			s.R_PROVINCE
            		FROM counter c
              			INNER JOIN stack s ON c.ID_STACK = s.id
            		WHERE c.R_COUNTRY <> ':countryName'
                  		AND s.ID_GAME = :idGame
                  		AND (c.TYPE = 'OWN')
           			)
           	;
		]]>
	</entry>
	<entry key="colony.inlandAdvance.rotw">
		<![CDATA[
			SELECT
				DISTINCT c.R_COUNTRY AS OWNER
			FROM r_province_rotw pr
  				INNER JOIN r_province p ON pr.id = p.id
 				LEFT OUTER JOIN STACK s ON s.R_PROVINCE = p.NAME
 				LEFT OUTER JOIN COUNTER c ON c.ID_STACK = s.ID
    		WHERE s.ID_GAME = :idGame
    			AND (c.TYPE = 'COLONY_PLUS' OR c.TYPE = 'MISSION')
    			AND pr.region IN (
  					SELECT
  						DISTINCT pr1.region
  					FROM r_province_rotw pr
    					INNER JOIN r_province p ON pr.id = p.id
    					INNER JOIN r_border b1 ON b1.ID_R_PROVINCE_FROM = p.ID
    					INNER JOIN r_province p1 ON b1.ID_R_PROVINCE_TO = p1.ID
    					INNER JOIN r_province_rotw pr1 ON pr1.ID = p1.ID
  					WHERE pr.region = (
    					SELECT
    						pr.REGION
    				FROM r_province_rotw pr
      					INNER JOIN r_province p ON pr.id = p.id
    				WHERE p.name = ':province'
  					)
				)
			;
		]]>
	</entry>
	<entry key="colony.inlandAdvance.eu">
		<![CDATA[
			SELECT
				DISTINCT IFNULL(c.R_COUNTRY, pe1.R_COUNTRY) AS OWNER
			FROM r_province_rotw pr
  				INNER JOIN r_province p ON pr.id = p.id
  				INNER JOIN r_border b1 ON b1.ID_R_PROVINCE_FROM = p.ID
  				INNER JOIN r_province p1 ON b1.ID_R_PROVINCE_TO = p1.ID
  				INNER JOIN r_province_eu pe1 ON pe1.ID = p1.ID
  				LEFT OUTER JOIN stack s ON s.R_PROVINCE = p1.NAME AND s.ID_GAME = :idGame
  				LEFT OUTER JOIN counter c ON c.ID_STACK = s.ID AND c.TYPE = 'OWN'
			WHERE pr.region = (
  				SELECT
  					pr.REGION
  				FROM r_province_rotw pr
    				INNER JOIN r_province p ON pr.id = p.id
  				WHERE p.name = ':province'
				)
			;
		]]>
	</entry>
	<entry key="tp.others_region">
		<![CDATA[
			SELECT
				COUNT(*) AS NUMBER
			FROM counter c
				INNER JOIN stack s ON c.ID_STACK = s.ID
				INNER JOIN r_province p ON s.R_PROVINCE = p.NAME
				INNER JOIN r_province_rotw pr ON pr.id = p.id
			WHERE s.ID_GAME = :idGame
				AND c.R_COUNTRY <> ':countryName'
				AND (c.TYPE = 'TRADING_POST_MINUS' OR c.TYPE = 'TRADING_POST_PLUS')
				AND pr.region = ':region'
			;
		]]>
	</entry>
	<entry key="tz.trade_fleet_access_rotw">
		<![CDATA[
			SELECT
				DISTINCT c.R_COUNTRY AS OWNER
			FROM counter c
 				INNER JOIN stack s ON c.ID_STACK = s.ID
			WHERE
				s.ID_GAME = :idGame
  				AND (c.TYPE = 'TRADING_POST_MINUS' OR c.TYPE = 'TRADING_POST_PLUS' OR c.TYPE = 'COLONY_MINUS' OR c.TYPE = 'COLONY_PLUS')
  				AND s.R_PROVINCE IN (
  					SELECT
  						DISTINCT p.NAME
  					FROM r_province_rotw pr
    					INNER JOIN r_province p ON p.ID = pr.ID
    					LEFT OUTER JOIN r_border b ON b.ID_R_PROVINCE_FROM = p.ID
    					INNER JOIN R_PROVINCE p2 ON b.ID_R_PROVINCE_TO = p2.ID
  					WHERE p2.NAME = ':province'
  						OR p2.NAME IN (
    						SELECT
    							p2.NAME
    						FROM r_province_tz ptz
      							INNER JOIN r_province p1 ON ptz.R_PROVINCE = p1.NAME
      							INNER JOIN R_PROVINCE_SEA ps1 ON p1.ID = ps1.ID
      							LEFT OUTER JOIN r_border b ON b.ID_R_PROVINCE_FROM = p1.ID
      							INNER JOIN R_PROVINCE p2 ON b.ID_R_PROVINCE_TO = p2.ID
      							INNER JOIN R_PROVINCE_SEA ps2 ON p2.ID = ps2.ID
    						WHERE ptz.R_PROVINCE = ':province'
  						)
				)
			;
		]]>
	</entry>
	<entry key="game.neighbor_owner">
		<![CDATA[
			SELECT
				DISTINCT COALESCE(GROUP_CONCAT(c.R_COUNTRY), pe1.R_COUNTRY) AS OWNER
  			FROM r_province p
  				INNER JOIN r_border b1 ON b1.ID_R_PROVINCE_FROM = p.ID
  				INNER JOIN r_province p1 ON b1.ID_R_PROVINCE_TO = p1.ID
  				INNER JOIN r_province_eu pe1 ON pe1.ID = p1.ID
  				LEFT OUTER JOIN stack s ON s.R_PROVINCE = p1.NAME AND s.ID_GAME = :idGame
  				LEFT OUTER JOIN counter c ON c.ID_STACK = s.ID AND c.TYPE = 'OWN'
			WHERE p.NAME = ':province'
			GROUP BY pe1.R_COUNTRY;
		]]>
	</entry>
	<entry key="tech.culture">
		<![CDATA[
			SELECT
  				max(CAST(SUBSTRING(stack.r_province, 8, 2) AS SIGNED INTEGER))
			FROM counter counter
    			INNER JOIN stack stack ON counter.id_stack = stack.id
    			INNER JOIN r_country country ON counter.r_country = country.name
			WHERE counter.type = ':techType'
    			AND country.culture in :cultures
    			AND stack.ID_GAME = :idGame
			;
		]]>
	</entry>
</properties>